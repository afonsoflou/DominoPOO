@startuml

class Domino {
    - int x
    - int y
    - boolean isVertical

    + int getX()
    + int getY()
    + boolean isVertical()
    + boolean isDouble()
    + boolean canConnect(Domino other)
    + boolean isStarter()
    + print()
    + printSegment(int i)
    + flip()
    + beVertical()
    + beHorizontal()
    + boolean isEqual(Domino)
    + int getValue()
}

class GameBoard {
    - int nLines
    - int nColumns
    - Graph<Domino> board
    - LinkedList<Domino> Corners

    + insertPiece(int dominoPlayed, int Corner)
    + Iterable<Domino> getCorners()
    - updateCorner(Domino Corner)
    + print()
}

abstract class Player {
    - GameBoard board
    - String playerName

    + String getName()
    + int getNumDominoes()
    + boolean isFirst()
    + boolean canPlay()
    + abstract play()
    + int getPoints()
    + boolean isWInner()
}

class DominoesGame {
    - int nLines
    - int nColumns
    - boolean hasWinner
    + startGame()
}

class Human {

    + play()
    - printPlayablePieces()
    - boolean validInputCheck(Domino other, Domino Corner)
    - printPieces()
}

class NPC {

    + play()
}

class Coordinate{
    +int x
    +int y
}

abstract class Corner{
    #Coordinate coordinate
    #Domino domino

    +abstract boolean isCorner()
    +abstract blockedDirection(Direction direction)
    +abstract Coordinate getAvailableCoordinate()
    +boolean isEqual(Domino domino)
}

class Intersection{
 + blockedDirection(Direction direction)
 + boolean isCorner()
 + Coordinate getAvailableCoordinate()
 - Coordinate verticalAvailableCoordinate(int x)
 - Coordinate horizontalAvailableCoordinate(int x)
 - Direction convBooleanToDirection(int x)
}

class Line{
  -Direction nextDirection

  + blockedDirection(Direction direction)
  + boolean isCorner()
  + Coordinate getAvailableCoordinate()
}


DominoesGame *-- Domino
DominoesGame *-- GameBoard
DominoesGame *-- Player
GameBoard o-- Domino
Player o-- Domino
Player o-- GameBoard
Player <|-- Human
Player <|--NPC
Corner <|-- Intersection
Corner <|-- Line
GameBoard +-- Corner

@enduml