@startuml

class Domino {
    - int x
    - int y
    - boolean isVertical

    + int getX()
    + int getY()
    + boolean isVertical()
    + boolean isDouble()
    + boolean canConnect(Domino other)
    + boolean isStarter()
    + print()
    + printSegment(int i)
    + flip()
    + beVertical()
    + beHorizontal()
    + boolean isEqual(Domino)
    + int getValue()
}

class GameBoard {
    - int nLines
    - int nColumns
    - Graph<Domino> board
    - LinkedList<Domino> Corners

    + insertPiece(int dominoPlayed, int corner)
    + Iterable<Domino> getCorners()
    - updateCorner(Domino corner)
    + print()
}

class Player {
    - GameBoard board
    - String playerName

    + String getName()
    + int getNumDominoes()
    + boolean isFirst()
    + boolean canPlay()
    + abstract play()
    + int getPoints()
    + boolean isWInner()
}

class DominoesGame {
    - int nLines
    - int nColumns
    - boolean hasWinner
    + startGame()
}

class Human {

    + play()
    - printPlayablePieces()
    - boolean validInputCheck(Domino other, Domino corner)
    - printPieces()
}

class NPC {

    + play()
}
DominoesGame *-- Domino
DominoesGame *-- GameBoard
DominoesGame *-- Player
GameBoard o-- Domino
Player o-- Domino
Player o-- GameBoard
Player <|-- Human
Player <|--NPC
@enduml